version: 2
jobs:
  test:
    docker:
      - image: circleci/openjdk:8-jdk
    # Peculiar workaround to set the working directory correctly.
    # Set it to a sub directory globally then set the git checkout
    # step to the root dir
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          command: gradle test
  build_job:
    docker:
      - image: 256440694439.dkr.ecr.us-east-2.amazonaws.com/ci:5
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle test jib # want jib to depend on test lifecycle phase so I dont have to call both here
      - run: helm package --app-version=$CIRCLE_BUILD_NUM --version=0.1.0-$CIRCLE_BUILD_NUM ../infrastructure/chart-src/tips
      - run: helm s3 push ./tips-0.1.0-$CIRCLE_BUILD_NUM.tgz rankers-charts
      - run: promote-artifact
workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore: master
  build:
      jobs:
        - build_job:
            filters:
              branches:
                only: master
